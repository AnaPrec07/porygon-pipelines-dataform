config {
  type: "table",
  schema: "thelook",
  description: "Cleaned version of raw order_items table",
  columns: {
    order_id: docs.order_id,
    user_id: docs.user_id,
    product_id: docs.product_id,
    inventory_item_id: docs.inventory_items_id,
    order_status: docs.status,
    date: docs.date_created,
    product_brand: docs.brand,
    product_category: docs.category,
    sale_price: docs.sale_price,
    processing_timestamp: docs.processing_timestamp,
    user_country: docs.country,
    product_cost: docs.cost,
    gross_profit: docs.gross_profit
  },
  tags: ["intermediate"],
  assertions: {
    nonNull: ["order_id","product_id", "inventory_item_id"],
    uniqueKey: ["order_id","product_id", "inventory_item_id"],
  }
}

SELECT 
SELECT 
order_items.order_id, 
order_items.user_id, 
order_items.product_id,
orders.status AS order_status,
inventory_item_id,
DATE(orders.date_created) AS date,
products.brand AS product_brand,
products.category AS produt_category,
users.age AS user_age,
users.gender AS user_gender,
users.country AS user_country,
users.iso_abbreviation,
order_items.sale_price,
products.cost AS product_cost,
order_items.sale_price - products.cost AS gross_profit,
${date_functions.getRuntimeTimestamp()}
FROM ${ref("order_items")} order_items
JOIN ${ref("products_dim")} products
ON order_items.product_id = products.product_id
JOIN ${ref("orders_dim")} orders
ON order_items.order_id = orders.order_id
JOIN ${ref("users_dim")} users
ON order_items.user_id = users.user_id
